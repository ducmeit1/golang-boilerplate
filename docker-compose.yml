version: "3"

networks:
  golang-boilerplate:
    driver: bridge

volumes:
  postgres_data:
    driver: local

services:
  db:
    image: postgres:13.8
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 3
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - "./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh"
    networks:
      - golang-boilerplate

  atlas:
    image: arigaio/atlas:latest
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    volumes:
      - "./migrations/:/migrations"
    links:
      - "db"
    networks:
      - golang-boilerplate

  # backend-api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: ["api"]
  #   depends_on:
  #     - db
  #   restart: always
  #   environment:
  #     POSTGRES_CONNECTION_STRING: "postgres://backend_user:backend_password@db:5432/backend_db?sslmode=disable"
  #   links:
  #     - db
  #   ports:
  #     - '8000:8000'
  #   networks:
  #     - golang-boilerplate
